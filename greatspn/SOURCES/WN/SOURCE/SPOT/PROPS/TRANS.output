Grammar

    0 $accept: FORMULES $end

    1 OP: EQ
    2   | NOT EQ

    3 @1: /* empty */

    4 VARS: ID @1 ',' VARS

    5 @2: /* empty */

    6 VARS: IDENT @2 ',' VARS
    7     | ID
    8     | IDENT

    9 @3: /* empty */

   10 COMP: IDENT @3 ',' COMP
   11     | IDENT

   12 STATIC: D '(' IDENT ')'

   13 @4: /* empty */

   14 @5: /* empty */

   15 FORMULES: ID @4 '[' ATOMIC ']' ';' @5 FORMULES
   16         | /* empty */

   17 ATOMIC: EXPR AND EXPR
   18       | EXPR OR EXPR
   19       | EXPR

   20 EXPR: MAX '(' IDENT ')'

   21 @6: /* empty */

   22 EXPR: IDENT OP '{' @6 VARS '}'

   23 @7: /* empty */

   24 EXPR: @7 STATIC OP STATIC

   25 @8: /* empty */

   26 EXPR: IDENT OP MAXI_COMP '(' @8 COMP ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 12 20 26
')' (41) 12 20 26
',' (44) 4 6 10
';' (59) 15
'[' (91) 15
']' (93) 15
'{' (123) 22
'}' (125) 22
error (256)
IDENT (258) 6 8 10 11 12 20 22 26
ID (259) 4 7 15
NOT (260) 2
EQ (261) 1 2
MAX (262) 20
D (263) 12
MAXI_COMP (264) 26
OR (265) 18
AND (266) 17


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
OP (21)
    on left: 1 2, on right: 22 24 26
VARS (22)
    on left: 4 6 7 8, on right: 4 6 22
@1 (23)
    on left: 3, on right: 4
@2 (24)
    on left: 5, on right: 6
COMP (25)
    on left: 10 11, on right: 10 26
@3 (26)
    on left: 9, on right: 10
STATIC (27)
    on left: 12, on right: 24
FORMULES (28)
    on left: 15 16, on right: 0 15
@4 (29)
    on left: 13, on right: 15
@5 (30)
    on left: 14, on right: 15
ATOMIC (31)
    on left: 17 18 19, on right: 15
EXPR (32)
    on left: 20 22 24 26, on right: 17 18 19
@6 (33)
    on left: 21, on right: 22
@7 (34)
    on left: 23, on right: 24
@8 (35)
    on left: 25, on right: 26


state 0

    0 $accept: . FORMULES $end

    ID  shift, and go to state 1

    $default  reduce using rule 16 (FORMULES)

    FORMULES  go to state 2


state 1

   15 FORMULES: ID . @4 '[' ATOMIC ']' ';' @5 FORMULES

    $default  reduce using rule 13 (@4)

    @4  go to state 3


state 2

    0 $accept: FORMULES . $end

    $end  shift, and go to state 4


state 3

   15 FORMULES: ID @4 . '[' ATOMIC ']' ';' @5 FORMULES

    '['  shift, and go to state 5


state 4

    0 $accept: FORMULES $end .

    $default  accept


state 5

   15 FORMULES: ID @4 '[' . ATOMIC ']' ';' @5 FORMULES

    IDENT  shift, and go to state 6
    MAX    shift, and go to state 7

    $default  reduce using rule 23 (@7)

    ATOMIC  go to state 8
    EXPR    go to state 9
    @7      go to state 10


state 6

   22 EXPR: IDENT . OP '{' @6 VARS '}'
   26     | IDENT . OP MAXI_COMP '(' @8 COMP ')'

    NOT  shift, and go to state 11
    EQ   shift, and go to state 12

    OP  go to state 13


state 7

   20 EXPR: MAX . '(' IDENT ')'

    '('  shift, and go to state 14


state 8

   15 FORMULES: ID @4 '[' ATOMIC . ']' ';' @5 FORMULES

    ']'  shift, and go to state 15


state 9

   17 ATOMIC: EXPR . AND EXPR
   18       | EXPR . OR EXPR
   19       | EXPR .

    OR   shift, and go to state 16
    AND  shift, and go to state 17

    $default  reduce using rule 19 (ATOMIC)


state 10

   24 EXPR: @7 . STATIC OP STATIC

    D  shift, and go to state 18

    STATIC  go to state 19


state 11

    2 OP: NOT . EQ

    EQ  shift, and go to state 20


state 12

    1 OP: EQ .

    $default  reduce using rule 1 (OP)


state 13

   22 EXPR: IDENT OP . '{' @6 VARS '}'
   26     | IDENT OP . MAXI_COMP '(' @8 COMP ')'

    MAXI_COMP  shift, and go to state 21
    '{'        shift, and go to state 22


state 14

   20 EXPR: MAX '(' . IDENT ')'

    IDENT  shift, and go to state 23


state 15

   15 FORMULES: ID @4 '[' ATOMIC ']' . ';' @5 FORMULES

    ';'  shift, and go to state 24


state 16

   18 ATOMIC: EXPR OR . EXPR

    IDENT  shift, and go to state 6
    MAX    shift, and go to state 7

    $default  reduce using rule 23 (@7)

    EXPR  go to state 25
    @7    go to state 10


state 17

   17 ATOMIC: EXPR AND . EXPR

    IDENT  shift, and go to state 6
    MAX    shift, and go to state 7

    $default  reduce using rule 23 (@7)

    EXPR  go to state 26
    @7    go to state 10


state 18

   12 STATIC: D . '(' IDENT ')'

    '('  shift, and go to state 27


state 19

   24 EXPR: @7 STATIC . OP STATIC

    NOT  shift, and go to state 11
    EQ   shift, and go to state 12

    OP  go to state 28


state 20

    2 OP: NOT EQ .

    $default  reduce using rule 2 (OP)


state 21

   26 EXPR: IDENT OP MAXI_COMP . '(' @8 COMP ')'

    '('  shift, and go to state 29


state 22

   22 EXPR: IDENT OP '{' . @6 VARS '}'

    $default  reduce using rule 21 (@6)

    @6  go to state 30


state 23

   20 EXPR: MAX '(' IDENT . ')'

    ')'  shift, and go to state 31


state 24

   15 FORMULES: ID @4 '[' ATOMIC ']' ';' . @5 FORMULES

    $default  reduce using rule 14 (@5)

    @5  go to state 32


state 25

   18 ATOMIC: EXPR OR EXPR .

    $default  reduce using rule 18 (ATOMIC)


state 26

   17 ATOMIC: EXPR AND EXPR .

    $default  reduce using rule 17 (ATOMIC)


state 27

   12 STATIC: D '(' . IDENT ')'

    IDENT  shift, and go to state 33


state 28

   24 EXPR: @7 STATIC OP . STATIC

    D  shift, and go to state 18

    STATIC  go to state 34


state 29

   26 EXPR: IDENT OP MAXI_COMP '(' . @8 COMP ')'

    $default  reduce using rule 25 (@8)

    @8  go to state 35


state 30

   22 EXPR: IDENT OP '{' @6 . VARS '}'

    IDENT  shift, and go to state 36
    ID     shift, and go to state 37

    VARS  go to state 38


state 31

   20 EXPR: MAX '(' IDENT ')' .

    $default  reduce using rule 20 (EXPR)


state 32

   15 FORMULES: ID @4 '[' ATOMIC ']' ';' @5 . FORMULES

    ID  shift, and go to state 1

    $default  reduce using rule 16 (FORMULES)

    FORMULES  go to state 39


state 33

   12 STATIC: D '(' IDENT . ')'

    ')'  shift, and go to state 40


state 34

   24 EXPR: @7 STATIC OP STATIC .

    $default  reduce using rule 24 (EXPR)


state 35

   26 EXPR: IDENT OP MAXI_COMP '(' @8 . COMP ')'

    IDENT  shift, and go to state 41

    COMP  go to state 42


state 36

    6 VARS: IDENT . @2 ',' VARS
    8     | IDENT .

    '}'       reduce using rule 8 (VARS)
    $default  reduce using rule 5 (@2)

    @2  go to state 43


state 37

    4 VARS: ID . @1 ',' VARS
    7     | ID .

    '}'       reduce using rule 7 (VARS)
    $default  reduce using rule 3 (@1)

    @1  go to state 44


state 38

   22 EXPR: IDENT OP '{' @6 VARS . '}'

    '}'  shift, and go to state 45


state 39

   15 FORMULES: ID @4 '[' ATOMIC ']' ';' @5 FORMULES .

    $default  reduce using rule 15 (FORMULES)


state 40

   12 STATIC: D '(' IDENT ')' .

    $default  reduce using rule 12 (STATIC)


state 41

   10 COMP: IDENT . @3 ',' COMP
   11     | IDENT .

    ')'       reduce using rule 11 (COMP)
    $default  reduce using rule 9 (@3)

    @3  go to state 46


state 42

   26 EXPR: IDENT OP MAXI_COMP '(' @8 COMP . ')'

    ')'  shift, and go to state 47


state 43

    6 VARS: IDENT @2 . ',' VARS

    ','  shift, and go to state 48


state 44

    4 VARS: ID @1 . ',' VARS

    ','  shift, and go to state 49


state 45

   22 EXPR: IDENT OP '{' @6 VARS '}' .

    $default  reduce using rule 22 (EXPR)


state 46

   10 COMP: IDENT @3 . ',' COMP

    ','  shift, and go to state 50


state 47

   26 EXPR: IDENT OP MAXI_COMP '(' @8 COMP ')' .

    $default  reduce using rule 26 (EXPR)


state 48

    6 VARS: IDENT @2 ',' . VARS

    IDENT  shift, and go to state 36
    ID     shift, and go to state 37

    VARS  go to state 51


state 49

    4 VARS: ID @1 ',' . VARS

    IDENT  shift, and go to state 36
    ID     shift, and go to state 37

    VARS  go to state 52


state 50

   10 COMP: IDENT @3 ',' . COMP

    IDENT  shift, and go to state 41

    COMP  go to state 53


state 51

    6 VARS: IDENT @2 ',' VARS .

    $default  reduce using rule 6 (VARS)


state 52

    4 VARS: ID @1 ',' VARS .

    $default  reduce using rule 4 (VARS)


state 53

   10 COMP: IDENT @3 ',' COMP .

    $default  reduce using rule 10 (COMP)
